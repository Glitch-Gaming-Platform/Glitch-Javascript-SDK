import { Config } from "./config";
import Auth from "./api/Auth";
import Competitions from "./api/Competitions";
import { Communities, Social } from "./api";
import { Users } from "./api";
import { Events } from "./api";
import { Teams } from "./api";
import { Posts } from "./api";
import { Templates } from "./api";
import { Waitlists } from "./api";
import { Utility } from "./api";
import { Tips } from "./api";
import { TipPackages } from "./api";
import { TipEmojis } from "./api";
import { TipPackagePurchases } from "./api";
import { SocialPosts } from "./api";
import { Titles } from "./api";
import { Campaigns } from "./api";
import { Subscriptions } from "./api";
import { Messages } from "./api";
import { Feedback } from "./api";
import { Influencers } from "./api";
import { Games } from "./api";
import { Publications } from "./api";
import { GameShows } from "./api";
import { Newsletters } from "./api";
import { PlayTests } from "./api";
import { Media } from "./api";
import { Scheduler } from "./api";
import Requests from "./util/Requests";
import Parser from "./util/Parser";
import Session from "./util/Session";
import Storage from "./util/Storage";
import Data from './util/Data';
import LabelManager from "./util/LabelManager";
import { Modes } from "./constants/Modes";
import { Roles } from "./constants/Roles";
import { TeamJoinProcess } from "./constants/TeamJoinProcess";
import { SocialInteractions } from "./constants/SocialInteractions";
import TicketTypes from "./constants/TicketTypes";
import { TicketUsageTypes } from "./constants/TicketUsageTypes";
import { TicketVisibility } from "./constants/TicketVisbility";
import { VenueType } from "./constants/VenueTypes";
declare class Glitch {
    static config: {
        Config: typeof Config;
    };
    static api: {
        Auth: typeof Auth;
        Campaigns: typeof Campaigns;
        Competitions: typeof Competitions;
        Communities: typeof Communities;
        Users: typeof Users;
        Events: typeof Events;
        Games: typeof Games;
        GameShows: typeof GameShows;
        Feedback: typeof Feedback;
        Influencers: typeof Influencers;
        Teams: typeof Teams;
        Posts: typeof Posts;
        Messages: typeof Messages;
        Templates: typeof Templates;
        Waitlists: typeof Waitlists;
        Utility: typeof Utility;
        Tips: typeof Tips;
        Titles: typeof Titles;
        Social: typeof Social;
        SocialPosts: typeof SocialPosts;
        Subscriptions: typeof Subscriptions;
        TipPackages: typeof TipPackages;
        TipEmojis: typeof TipEmojis;
        TipPackagePurchases: typeof TipPackagePurchases;
        Publications: typeof Publications;
        Newsletters: typeof Newsletters;
        PlayTests: typeof PlayTests;
        Media: typeof Media;
        Scheduler: typeof Scheduler;
    };
    static util: {
        Requests: typeof Requests;
        Parser: typeof Parser;
        Session: typeof Session;
        Storage: typeof Storage;
        Data: typeof Data;
        LabelManager: typeof LabelManager;
    };
    static constants: {
        AcceptanceStatus: Readonly<{
            UNAPPROVED: 0;
            APPROVED: 1;
            IN_REVIEW: 2;
            PENDING: 3;
            REQUIRE_MORE_INFORMATION: 4;
            DENIED: 5;
            BANNED: 6;
            PROBATION: 7;
        }>;
        AddressLocationType: Readonly<{
            VIRTUAL: 1;
            IN_PERSON: 2;
            HYBRID: 3;
        }>;
        CampaignObjective: {
            BrandAwareness: number;
            AudienceEngagement: number;
            LeadGeneration: number;
            SalesConversion: number;
            BrandIdentityReputation: number;
            CustomerLoyaltyRetention: number;
            ContentAmplificationDiversity: number;
            MarketFeedbackInsight: number;
            EducatingAudience: number;
            CommunityBuilding: number;
            DrivingWebTraffic: number;
            SEOBenefits: number;
        };
        CompetitionTypes: Readonly<{
            SINGLE_ELIMINATION: 1;
            DOUBLE_ELIMINATION: 2;
            MULTILEVEL: 3;
            STRAIGHT_ROUND_ROBIN: 4;
            ROUND_ROBIN_DOUBLE_SPLIT: 5;
            ROUND_ROBIN_TRIPLE_SPLIT: 6;
            ROUND_ROBIN_QUADRUPLE_SPLIT: 7;
            SEMI_ROUND_ROBINS: 8;
            EXTENDED: 9;
        }>;
        ContentStatus: Readonly<{
            UNAPPROVED: 0;
            APPROVED: 1;
            IN_REVIEW: 2;
            PENDING: 3;
            FLAGGED: 4;
            REMOVED: 5;
            DELETED: 6;
        }>;
        InfluencerCampaignType: {
            SponsoredContent: number;
            AffiliateMarketing: number;
            ProductGifting: number;
            BrandAmbassador: number;
            SocialMediaTakeover: number;
            ContestsGiveaways: number;
            EventCoverage: number;
            CoCreationOfProducts: number;
            InfluencerWhitelisting: number;
            SocialIssuesCauseCampaigns: number;
        };
        Modes: typeof Modes;
        PostTypes: Readonly<{
            TEXT: "text";
            LINK: "link";
            POLL: "poll";
            IMAGE: "image";
            VIDEO: "video";
        }>;
        Roles: typeof Roles;
        SocialInteractions: typeof SocialInteractions;
        TeamJoinProcess: typeof TeamJoinProcess;
        TicketTypes: typeof TicketTypes;
        TicketUsageTypes: typeof TicketUsageTypes;
        TicketVisibility: typeof TicketVisibility;
        VenueType: typeof VenueType;
    };
}
export default Glitch;
